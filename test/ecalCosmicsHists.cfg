process GETUNCALRECHIT = { 

source = PoolSource {
	untracked vstring fileNames = {
	'/store/data/GlobalCruzet1/A/000/000/000/RAW/0000/FC6B530B-621B-DD11-82B5-000423D6CA72.root'
	}        
        untracked uint32 skipEvents = 0
}

untracked PSet maxEvents = {untracked int32 input = -1}

include "EventFilter/EcalRawToDigiDev/data/EcalUnpackerMapping.cfi"
include "EventFilter/EcalRawToDigiDev/data/EcalUnpackerData.cfi"

include "Geometry/CaloEventSetup/data/CaloTopology.cfi"
###include "Geometry/EcalCommonData/data/EcalOnly.cfi"
include "Geometry/CaloEventSetup/data/CaloGeometry.cff"


es_source src1 = EcalTrivialConditionRetriever{
     untracked vdouble amplWeights = { -0.333, -0.333, -0.333,
                                        0.000,  0.000,  1.000,
                                        0.000,  0.000,  0.000,  0.000 }
     untracked vdouble pedWeights  = {  0.333,  0.333,  0.333,
                                        0.000,  0.000,  0.000,
                                        0.000,  0.000,  0.000,  0.000 }
     untracked vdouble jittWeights = {  0.040,  0.040,  0.040,
                                        0.000,  1.320, -0.050,
                                       -0.500, -0.500, -0.400,  0.000 }
     untracked double adcToGeVEBConstant = 0.009

     untracked string  channelStatusFile = "CaloOnlineTools/EcalTools/data/listCRUZET.v1.hashed.trivial.txt_gio"

#     untracked string  channelStatusFile = ""
} 


#include "Configuration/StandardSequences/data/FrontierConditions_GlobalTag.cff"
#replace GlobalTag.connect = "sqlite_file:/afs/cern.ch/user/m/malgeri/public/globtag/CRUZET.db"
#replace GlobalTag.globaltag = "CRUZET_V2::All"
#
#include "CalibCalorimetry/EcalTrivialCondModules/data/EcalTrivialCondRetriever.cfi"
#replace EcalTrivialConditionRetriever.producedEcalWeights = false
#replace EcalTrivialConditionRetriever.producedEcalPedestals = false
#replace EcalTrivialConditionRetriever.producedEcalIntercalibConstants = false
#replace EcalTrivialConditionRetriever.producedEcalIntercalibErrors = false
#replace EcalTrivialConditionRetriever.producedEcalGainRatios = false
#replace EcalTrivialConditionRetriever.producedEcalADCToGeVConstant = false
#replace EcalTrivialConditionRetriever.producedEcalLaserCorrection = false
##Put this to true to read channel status from file 
#replace EcalTrivialConditionRetriever.producedChannelStatus = true
#replace EcalTrivialConditionRetriever.channelStatusFile ="CalibCalorimetry/EcalTrivialCondModules/data/listCRUZET.v1.hashed.trivial.txt_gio"
#es_prefer = EcalTrivialConditionRetriever{}

include "CalibCalorimetry/EcalLaserCorrection/data/ecalLaserCorrectionService.cfi"

 
#module ecalUncalibHit = ecalMaxSampleUncalibRecHit from "RecoLocalCalo/EcalRecProducers/data/ecalMaxSampleUncalibRecHit.cfi"
module ecalUncalibHit = ecalFixedAlphaBetaFitUncalibRecHit from "RecoLocalCalo/EcalRecProducers/data/ecalFixedAlphaBetaFitUncalibRecHit.cfi"

replace ecalUncalibHit.EBdigiCollection = ecalEBunpacker:ebDigis
replace ecalUncalibHit.EEdigiCollection = ecalEBunpacker:eeDigis

include "RecoLocalCalo/EcalRecProducers/data/ecalRecHit.cfi"
replace ecalRecHit.ChannelStatusToBeExcluded={1}
replace ecalRecHit.EBuncalibRecHitCollection = ecalUncalibHit:EcalUncalibRecHitsEB
replace ecalRecHit.EEuncalibRecHitCollection = ecalUncalibHit:EcalUncalibRecHitsEE
	   
# geometry needed for clustering
include "RecoEcal/EgammaClusterProducers/data/geometryForClustering.cff"

# FixedMatrix clusters 
include "RecoEcal/EgammaClusterProducers/data/cosmicClusteringSequence.cff"

include "CaloOnlineTools/EcalTools/data/ecalCosmicsHists.cfi"
replace ecalCosmicsHists.fileName = 'EcalCosmicsHists'


#module dumpEv = EventContentAnalyzer {}

path p = {    ecalEBunpacker
              , ecalUncalibHit 
	      , ecalRecHit
	      , cosmicClusteringSequence
              , ecalCosmicsHists
              #, dumpEv
             }

service = MessageLogger{
       untracked vstring destinations = { "cout" }

       untracked vstring categories = {     "EcalURecHitHists"
                                            #,  "EcalTBRawToDigi"
                                            #,  "EcalRawToDigiDev"
                                       }
       untracked PSet cout = {   untracked string threshold = "INFO"  }
       untracked vstring suppressInfo = {"ecalEBunpacker"}
}

}
